# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.equipment import Equipment
from swagger_server.models.source import Source
from swagger_server.models.workout import Workout
from swagger_server import util


class Everything(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, sources: List[Source]=None, workouts: List[Workout]=None, tags: List[str]=None, exercises: List[str]=None, equipment: List[Equipment]=None):  # noqa: E501
        """Everything - a model defined in Swagger

        :param sources: The sources of this Everything.  # noqa: E501
        :type sources: List[Source]
        :param workouts: The workouts of this Everything.  # noqa: E501
        :type workouts: List[Workout]
        :param tags: The tags of this Everything.  # noqa: E501
        :type tags: List[str]
        :param exercises: The exercises of this Everything.  # noqa: E501
        :type exercises: List[str]
        :param equipment: The equipment of this Everything.  # noqa: E501
        :type equipment: List[Equipment]
        """
        self.swagger_types = {
            'sources': List[Source],
            'workouts': List[Workout],
            'tags': List[str],
            'exercises': List[str],
            'equipment': List[Equipment]
        }

        self.attribute_map = {
            'sources': 'sources',
            'workouts': 'workouts',
            'tags': 'tags',
            'exercises': 'exercises',
            'equipment': 'equipment'
        }

        self._sources = sources
        self._workouts = workouts
        self._tags = tags
        self._exercises = exercises
        self._equipment = equipment

    @classmethod
    def from_dict(cls, dikt) -> 'Everything':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Everything of this Everything.  # noqa: E501
        :rtype: Everything
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sources(self) -> List[Source]:
        """Gets the sources of this Everything.


        :return: The sources of this Everything.
        :rtype: List[Source]
        """
        return self._sources

    @sources.setter
    def sources(self, sources: List[Source]):
        """Sets the sources of this Everything.


        :param sources: The sources of this Everything.
        :type sources: List[Source]
        """

        self._sources = sources

    @property
    def workouts(self) -> List[Workout]:
        """Gets the workouts of this Everything.


        :return: The workouts of this Everything.
        :rtype: List[Workout]
        """
        return self._workouts

    @workouts.setter
    def workouts(self, workouts: List[Workout]):
        """Sets the workouts of this Everything.


        :param workouts: The workouts of this Everything.
        :type workouts: List[Workout]
        """

        self._workouts = workouts

    @property
    def tags(self) -> List[str]:
        """Gets the tags of this Everything.


        :return: The tags of this Everything.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags: List[str]):
        """Sets the tags of this Everything.


        :param tags: The tags of this Everything.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def exercises(self) -> List[str]:
        """Gets the exercises of this Everything.


        :return: The exercises of this Everything.
        :rtype: List[str]
        """
        return self._exercises

    @exercises.setter
    def exercises(self, exercises: List[str]):
        """Sets the exercises of this Everything.


        :param exercises: The exercises of this Everything.
        :type exercises: List[str]
        """

        self._exercises = exercises

    @property
    def equipment(self) -> List[Equipment]:
        """Gets the equipment of this Everything.


        :return: The equipment of this Everything.
        :rtype: List[Equipment]
        """
        return self._equipment

    @equipment.setter
    def equipment(self, equipment: List[Equipment]):
        """Sets the equipment of this Everything.


        :param equipment: The equipment of this Everything.
        :type equipment: List[Equipment]
        """

        self._equipment = equipment
