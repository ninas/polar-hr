# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PaginatedResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, next_page: int=None, data: List[object]=None):  # noqa: E501
        """PaginatedResult - a model defined in Swagger

        :param next_page: The next_page of this PaginatedResult.  # noqa: E501
        :type next_page: int
        :param data: The data of this PaginatedResult.  # noqa: E501
        :type data: List[object]
        """
        self.swagger_types = {
            'next_page': int,
            'data': List[object]
        }

        self.attribute_map = {
            'next_page': 'nextPage',
            'data': 'data'
        }

        self._next_page = next_page
        self._data = data

    @classmethod
    def from_dict(cls, dikt) -> 'PaginatedResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PaginatedResult of this PaginatedResult.  # noqa: E501
        :rtype: PaginatedResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page(self) -> int:
        """Gets the next_page of this PaginatedResult.

        The next page id, or -1 if not paginated/there are no more pages  # noqa: E501

        :return: The next_page of this PaginatedResult.
        :rtype: int
        """
        return self._next_page

    @next_page.setter
    def next_page(self, next_page: int):
        """Sets the next_page of this PaginatedResult.

        The next page id, or -1 if not paginated/there are no more pages  # noqa: E501

        :param next_page: The next_page of this PaginatedResult.
        :type next_page: int
        """

        self._next_page = next_page

    @property
    def data(self) -> List[object]:
        """Gets the data of this PaginatedResult.

        Will be an array of one of Source, Workout, Equipment, strings (for tags and exercises) or Everything  # noqa: E501

        :return: The data of this PaginatedResult.
        :rtype: List[object]
        """
        return self._data

    @data.setter
    def data(self, data: List[object]):
        """Sets the data of this PaginatedResult.

        Will be an array of one of Source, Workout, Equipment, strings (for tags and exercises) or Everything  # noqa: E501

        :param data: The data of this PaginatedResult.
        :type data: List[object]
        """

        self._data = data
