# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.source_query_params import SourceQueryParams
from swagger_server.models.workout_query_params import WorkoutQueryParams
from swagger_server import util


class Query(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, sources_attributes: SourceQueryParams=None, workouts_attributes: WorkoutQueryParams=None, paginate: bool=None, pagination_id: int=None):  # noqa: E501
        """Query - a model defined in Swagger

        :param sources_attributes: The sources_attributes of this Query.  # noqa: E501
        :type sources_attributes: SourceQueryParams
        :param workouts_attributes: The workouts_attributes of this Query.  # noqa: E501
        :type workouts_attributes: WorkoutQueryParams
        :param paginate: The paginate of this Query.  # noqa: E501
        :type paginate: bool
        :param pagination_id: The pagination_id of this Query.  # noqa: E501
        :type pagination_id: int
        """
        self.swagger_types = {
            'sources_attributes': SourceQueryParams,
            'workouts_attributes': WorkoutQueryParams,
            'paginate': bool,
            'pagination_id': int
        }

        self.attribute_map = {
            'sources_attributes': 'sourcesAttributes',
            'workouts_attributes': 'workoutsAttributes',
            'paginate': 'paginate',
            'pagination_id': 'paginationId'
        }

        self._sources_attributes = sources_attributes
        self._workouts_attributes = workouts_attributes
        self._paginate = paginate
        self._pagination_id = pagination_id

    @classmethod
    def from_dict(cls, dikt) -> 'Query':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Query of this Query.  # noqa: E501
        :rtype: Query
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sources_attributes(self) -> SourceQueryParams:
        """Gets the sources_attributes of this Query.


        :return: The sources_attributes of this Query.
        :rtype: SourceQueryParams
        """
        return self._sources_attributes

    @sources_attributes.setter
    def sources_attributes(self, sources_attributes: SourceQueryParams):
        """Sets the sources_attributes of this Query.


        :param sources_attributes: The sources_attributes of this Query.
        :type sources_attributes: SourceQueryParams
        """

        self._sources_attributes = sources_attributes

    @property
    def workouts_attributes(self) -> WorkoutQueryParams:
        """Gets the workouts_attributes of this Query.


        :return: The workouts_attributes of this Query.
        :rtype: WorkoutQueryParams
        """
        return self._workouts_attributes

    @workouts_attributes.setter
    def workouts_attributes(self, workouts_attributes: WorkoutQueryParams):
        """Sets the workouts_attributes of this Query.


        :param workouts_attributes: The workouts_attributes of this Query.
        :type workouts_attributes: WorkoutQueryParams
        """

        self._workouts_attributes = workouts_attributes

    @property
    def paginate(self) -> bool:
        """Gets the paginate of this Query.


        :return: The paginate of this Query.
        :rtype: bool
        """
        return self._paginate

    @paginate.setter
    def paginate(self, paginate: bool):
        """Sets the paginate of this Query.


        :param paginate: The paginate of this Query.
        :type paginate: bool
        """

        self._paginate = paginate

    @property
    def pagination_id(self) -> int:
        """Gets the pagination_id of this Query.


        :return: The pagination_id of this Query.
        :rtype: int
        """
        return self._pagination_id

    @pagination_id.setter
    def pagination_id(self, pagination_id: int):
        """Sets the pagination_id of this Query.


        :param pagination_id: The pagination_id of this Query.
        :type pagination_id: int
        """

        self._pagination_id = pagination_id
