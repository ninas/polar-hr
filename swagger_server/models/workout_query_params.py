# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.date_range import DateRange
from swagger_server.models.equipment import Equipment
from swagger_server.models.hr_range import HRRange
from swagger_server.models.hr_zone_range import HRZoneRange
from swagger_server.models.source_query_params import SourceQueryParams
from swagger_server import util


class WorkoutQueryParams(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, tags: List[str]=None, tag_types: List[str]=None, date_range: DateRange=None, sport: List[str]=None, samples: bool=None, equipment: List[Equipment]=None, hr_range: HRRange=None, avg_hr_range: HRRange=None, in_hr_zone: List[HRZoneRange]=None, above_hr_zone: List[HRZoneRange]=None, source_params: SourceQueryParams=None):  # noqa: E501
        """WorkoutQueryParams - a model defined in Swagger

        :param tags: The tags of this WorkoutQueryParams.  # noqa: E501
        :type tags: List[str]
        :param tag_types: The tag_types of this WorkoutQueryParams.  # noqa: E501
        :type tag_types: List[str]
        :param date_range: The date_range of this WorkoutQueryParams.  # noqa: E501
        :type date_range: DateRange
        :param sport: The sport of this WorkoutQueryParams.  # noqa: E501
        :type sport: List[str]
        :param samples: The samples of this WorkoutQueryParams.  # noqa: E501
        :type samples: bool
        :param equipment: The equipment of this WorkoutQueryParams.  # noqa: E501
        :type equipment: List[Equipment]
        :param hr_range: The hr_range of this WorkoutQueryParams.  # noqa: E501
        :type hr_range: HRRange
        :param avg_hr_range: The avg_hr_range of this WorkoutQueryParams.  # noqa: E501
        :type avg_hr_range: HRRange
        :param in_hr_zone: The in_hr_zone of this WorkoutQueryParams.  # noqa: E501
        :type in_hr_zone: List[HRZoneRange]
        :param above_hr_zone: The above_hr_zone of this WorkoutQueryParams.  # noqa: E501
        :type above_hr_zone: List[HRZoneRange]
        :param source_params: The source_params of this WorkoutQueryParams.  # noqa: E501
        :type source_params: SourceQueryParams
        """
        self.swagger_types = {
            'tags': List[str],
            'tag_types': List[str],
            'date_range': DateRange,
            'sport': List[str],
            'samples': bool,
            'equipment': List[Equipment],
            'hr_range': HRRange,
            'avg_hr_range': HRRange,
            'in_hr_zone': List[HRZoneRange],
            'above_hr_zone': List[HRZoneRange],
            'source_params': SourceQueryParams
        }

        self.attribute_map = {
            'tags': 'tags',
            'tag_types': 'tagTypes',
            'date_range': 'dateRange',
            'sport': 'sport',
            'samples': 'samples',
            'equipment': 'equipment',
            'hr_range': 'hrRange',
            'avg_hr_range': 'avgHRRange',
            'in_hr_zone': 'inHRZone',
            'above_hr_zone': 'aboveHRZone',
            'source_params': 'sourceParams'
        }

        self._tags = tags
        self._tag_types = tag_types
        self._date_range = date_range
        self._sport = sport
        self._samples = samples
        self._equipment = equipment
        self._hr_range = hr_range
        self._avg_hr_range = avg_hr_range
        self._in_hr_zone = in_hr_zone
        self._above_hr_zone = above_hr_zone
        self._source_params = source_params

    @classmethod
    def from_dict(cls, dikt) -> 'WorkoutQueryParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WorkoutQueryParams of this WorkoutQueryParams.  # noqa: E501
        :rtype: WorkoutQueryParams
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tags(self) -> List[str]:
        """Gets the tags of this WorkoutQueryParams.

        Tags to filter by  # noqa: E501

        :return: The tags of this WorkoutQueryParams.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags: List[str]):
        """Sets the tags of this WorkoutQueryParams.

        Tags to filter by  # noqa: E501

        :param tags: The tags of this WorkoutQueryParams.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def tag_types(self) -> List[str]:
        """Gets the tag_types of this WorkoutQueryParams.

        Filter by specific type of tag  # noqa: E501

        :return: The tag_types of this WorkoutQueryParams.
        :rtype: List[str]
        """
        return self._tag_types

    @tag_types.setter
    def tag_types(self, tag_types: List[str]):
        """Sets the tag_types of this WorkoutQueryParams.

        Filter by specific type of tag  # noqa: E501

        :param tag_types: The tag_types of this WorkoutQueryParams.
        :type tag_types: List[str]
        """

        self._tag_types = tag_types

    @property
    def date_range(self) -> DateRange:
        """Gets the date_range of this WorkoutQueryParams.


        :return: The date_range of this WorkoutQueryParams.
        :rtype: DateRange
        """
        return self._date_range

    @date_range.setter
    def date_range(self, date_range: DateRange):
        """Sets the date_range of this WorkoutQueryParams.


        :param date_range: The date_range of this WorkoutQueryParams.
        :type date_range: DateRange
        """

        self._date_range = date_range

    @property
    def sport(self) -> List[str]:
        """Gets the sport of this WorkoutQueryParams.

        Filter by sport type  # noqa: E501

        :return: The sport of this WorkoutQueryParams.
        :rtype: List[str]
        """
        return self._sport

    @sport.setter
    def sport(self, sport: List[str]):
        """Sets the sport of this WorkoutQueryParams.

        Filter by sport type  # noqa: E501

        :param sport: The sport of this WorkoutQueryParams.
        :type sport: List[str]
        """

        self._sport = sport

    @property
    def samples(self) -> bool:
        """Gets the samples of this WorkoutQueryParams.

        Whether to include samples in return  # noqa: E501

        :return: The samples of this WorkoutQueryParams.
        :rtype: bool
        """
        return self._samples

    @samples.setter
    def samples(self, samples: bool):
        """Sets the samples of this WorkoutQueryParams.

        Whether to include samples in return  # noqa: E501

        :param samples: The samples of this WorkoutQueryParams.
        :type samples: bool
        """

        self._samples = samples

    @property
    def equipment(self) -> List[Equipment]:
        """Gets the equipment of this WorkoutQueryParams.

        Filter by equipment used in the workout.  It is possible to leave off magnitude or quantity, but equipmentType must always be specified   # noqa: E501

        :return: The equipment of this WorkoutQueryParams.
        :rtype: List[Equipment]
        """
        return self._equipment

    @equipment.setter
    def equipment(self, equipment: List[Equipment]):
        """Sets the equipment of this WorkoutQueryParams.

        Filter by equipment used in the workout.  It is possible to leave off magnitude or quantity, but equipmentType must always be specified   # noqa: E501

        :param equipment: The equipment of this WorkoutQueryParams.
        :type equipment: List[Equipment]
        """

        self._equipment = equipment

    @property
    def hr_range(self) -> HRRange:
        """Gets the hr_range of this WorkoutQueryParams.


        :return: The hr_range of this WorkoutQueryParams.
        :rtype: HRRange
        """
        return self._hr_range

    @hr_range.setter
    def hr_range(self, hr_range: HRRange):
        """Sets the hr_range of this WorkoutQueryParams.


        :param hr_range: The hr_range of this WorkoutQueryParams.
        :type hr_range: HRRange
        """

        self._hr_range = hr_range

    @property
    def avg_hr_range(self) -> HRRange:
        """Gets the avg_hr_range of this WorkoutQueryParams.


        :return: The avg_hr_range of this WorkoutQueryParams.
        :rtype: HRRange
        """
        return self._avg_hr_range

    @avg_hr_range.setter
    def avg_hr_range(self, avg_hr_range: HRRange):
        """Sets the avg_hr_range of this WorkoutQueryParams.


        :param avg_hr_range: The avg_hr_range of this WorkoutQueryParams.
        :type avg_hr_range: HRRange
        """

        self._avg_hr_range = avg_hr_range

    @property
    def in_hr_zone(self) -> List[HRZoneRange]:
        """Gets the in_hr_zone of this WorkoutQueryParams.

        Time spent within a specific heart rate zone  # noqa: E501

        :return: The in_hr_zone of this WorkoutQueryParams.
        :rtype: List[HRZoneRange]
        """
        return self._in_hr_zone

    @in_hr_zone.setter
    def in_hr_zone(self, in_hr_zone: List[HRZoneRange]):
        """Sets the in_hr_zone of this WorkoutQueryParams.

        Time spent within a specific heart rate zone  # noqa: E501

        :param in_hr_zone: The in_hr_zone of this WorkoutQueryParams.
        :type in_hr_zone: List[HRZoneRange]
        """

        self._in_hr_zone = in_hr_zone

    @property
    def above_hr_zone(self) -> List[HRZoneRange]:
        """Gets the above_hr_zone of this WorkoutQueryParams.

        Time spent within and above a specific heart rate zone  # noqa: E501

        :return: The above_hr_zone of this WorkoutQueryParams.
        :rtype: List[HRZoneRange]
        """
        return self._above_hr_zone

    @above_hr_zone.setter
    def above_hr_zone(self, above_hr_zone: List[HRZoneRange]):
        """Sets the above_hr_zone of this WorkoutQueryParams.

        Time spent within and above a specific heart rate zone  # noqa: E501

        :param above_hr_zone: The above_hr_zone of this WorkoutQueryParams.
        :type above_hr_zone: List[HRZoneRange]
        """

        self._above_hr_zone = above_hr_zone

    @property
    def source_params(self) -> SourceQueryParams:
        """Gets the source_params of this WorkoutQueryParams.


        :return: The source_params of this WorkoutQueryParams.
        :rtype: SourceQueryParams
        """
        return self._source_params

    @source_params.setter
    def source_params(self, source_params: SourceQueryParams):
        """Sets the source_params of this WorkoutQueryParams.


        :param source_params: The source_params of this WorkoutQueryParams.
        :type source_params: SourceQueryParams
        """

        self._source_params = source_params
