---
swagger: "2.0"
info:
  description: "API to access workout data"
  version: "1.0.0"
  title: "Workout API"
host: "virtserver.swaggerhub.com"
basePath: "/NINASCHIFF/workout-api/1.0.0"
tags:
- name: "workout"
  description: "Info around a specific workout"
- name: "source"
  description: "What workout is done"
schemes:
- "https"
- "http"
paths:
  /workout/{workoutId}:
    get:
      tags:
      - "workout"
      summary: "Retrieve a specific workout"
      description: "Returns a single workout"
      operationId: "get_workout_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "workoutId"
        in: "path"
        description: "ID of workout to return"
        required: true
        type: "integer"
        format: "int64"
      - name: "samples"
        in: "query"
        description: "Whether to include samples in return"
        required: false
        type: "boolean"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Workout"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Workout not found"
      x-swagger-router-controller: "swagger_server.controllers.workout_controller"
  /workouts:
    get:
      tags:
      - "workout"
      summary: "Fetch all workouts"
      description: "Returns all workouts"
      operationId: "all_workouts"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Workout"
      x-swagger-router-controller: "swagger_server.controllers.workout_controller"
    post:
      tags:
      - "workout"
      summary: "Search for workouts"
      description: "Search for workouts matching a variety of parameters. Using post\
        \ due to length limitations on GET"
      operationId: "search_for_workouts"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Search for workouts"
        required: true
        schema:
          $ref: "#/definitions/WorkoutQuery"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Workout"
        "400":
          description: "Invalid search values"
      x-swagger-router-controller: "swagger_server.controllers.workout_controller"
  /source/{sourceId}:
    get:
      tags:
      - "source"
      summary: "Retrieve a specific source using its id"
      description: "Returns a single source"
      operationId: "get_source_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "sourceId"
        in: "path"
        description: "ID of source to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Source"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Source not found"
      x-swagger-router-controller: "swagger_server.controllers.source_controller"
  /source/url/{sourceUrl}:
    get:
      tags:
      - "source"
      summary: "Retrieve a specific source using its url"
      description: "Returns a single source"
      operationId: "get_source_by_url"
      produces:
      - "application/json"
      parameters:
      - name: "sourceUrl"
        in: "path"
        description: "URL of source to return"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Source"
        "400":
          description: "Invalid URL supplied"
        "404":
          description: "Source not found"
      x-swagger-router-controller: "swagger_server.controllers.source_controller"
  /sources:
    get:
      tags:
      - "source"
      summary: "Return all sources"
      description: "Fetch all sources"
      operationId: "all_sources"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Source"
      x-swagger-router-controller: "swagger_server.controllers.source_controller"
    post:
      tags:
      - "source"
      summary: "Search for sources"
      description: "Search for sources matching a variety of parameters. Using post\
        \ due to length limitations on GET"
      operationId: "search_for_sources"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Search for sources"
        required: true
        schema:
          $ref: "#/definitions/SourceQuery"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Source"
        "400":
          description: "Invalid search values"
      x-swagger-router-controller: "swagger_server.controllers.source_controller"
  /tags:
    get:
      tags:
      - "tags"
      summary: "Return all tags"
      description: "Fetch all tags"
      operationId: "all_tags"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
      x-google-backend:
        address: "https://us-central1-workout-368502.cloudfunctions.net/tags-dev-tags"
      x-swagger-router-controller: "swagger_server.controllers.tags_controller"
  /refresh:
    post:
      tags:
      - "utils"
      summary: "Refresh workout data"
      description: "Manually refresh workout data"
      operationId: "refresh"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
        "500":
          description: "Error refreshing"
      x-google-backend:
        address: "https://us-central1-workout-368502.cloudfunctions.net/refresh-function-dev-first"
      x-swagger-router-controller: "swagger_server.controllers.utils_controller"
  /everything:
    get:
      tags:
      - "utils"
      summary: "Return all data"
      description: "Fetch everything"
      operationId: "everything"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Everything"
      x-google-backend:
        address: "https://us-central1-workout-368502.cloudfunctions.net/everything-dev-everything"
      x-swagger-router-controller: "swagger_server.controllers.utils_controller"
definitions:
  Everything:
    type: "object"
    properties:
      sources:
        type: "array"
        items:
          $ref: "#/definitions/Source"
      workouts:
        type: "array"
        items:
          $ref: "#/definitions/Workout"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
      equipment:
        type: "array"
        items:
          $ref: "#/definitions/Equipment"
    example:
      sources:
      - duration: "P1DT12H"
        creator: "creator"
        sourceType: {}
        tagIds:
        - 7
        - 7
        name: "name"
        id: 2
        url: "url"
        extraInfo: "extraInfo"
        tags:
        - name: "name"
          tagType: {}
          id: 4
        - name: "name"
          tagType: {}
          id: 4
      - duration: "P1DT12H"
        creator: "creator"
        sourceType: {}
        tagIds:
        - 7
        - 7
        name: "name"
        id: 2
        url: "url"
        extraInfo: "extraInfo"
        tags:
        - name: "name"
          tagType: {}
          id: 4
        - name: "name"
          tagType: {}
          id: 4
      workouts:
      - maxHR: 2
        notes: "notes"
        sources:
        - duration: "P1DT12H"
          creator: "creator"
          sourceType: {}
          tagIds:
          - 7
          - 7
          name: "name"
          id: 2
          url: "url"
          extraInfo: "extraInfo"
          tags:
          - name: "name"
            tagType: {}
            id: 4
          - name: "name"
            tagType: {}
            id: 4
        - duration: "P1DT12H"
          creator: "creator"
          sourceType: {}
          tagIds:
          - 7
          - 7
          name: "name"
          id: 2
          url: "url"
          extraInfo: "extraInfo"
          tags:
          - name: "name"
            tagType: {}
            id: 4
          - name: "name"
            tagType: {}
            id: 4
        hrZones:
        - duration: "P1DT12H"
          zoneType: {}
          upperLimit: 7
          id: 1
          lowerLimit: 6
          percentSpentAbove: 1.1730742
        - duration: "P1DT12H"
          zoneType: {}
          upperLimit: 7
          id: 1
          lowerLimit: 6
          percentSpentAbove: 1.1730742
        tagIds:
        - 1
        - 1
        equipment:
        - quantity: 9
          magnitude: "5lbs"
          id: 7
          equipmentType: {}
        - quantity: 9
          magnitude: "5lbs"
          id: 7
          equipmentType: {}
        calories: 1
        minHR: 5
        samples:
        - 6
        - 6
        tags:
        - name: "name"
          tagType: {}
          id: 4
        - name: "name"
          tagType: {}
          id: 4
        avgHR: 5
        equipmentIds:
        - 3
        - 3
        startTime: "2022-12-10T00:14:25-00:00"
        id: 0
        endTime: "2022-12-10T00:14:25-00:00"
        sport: "sport"
        sourceIds:
        - 1
        - 1
      - maxHR: 2
        notes: "notes"
        sources:
        - duration: "P1DT12H"
          creator: "creator"
          sourceType: {}
          tagIds:
          - 7
          - 7
          name: "name"
          id: 2
          url: "url"
          extraInfo: "extraInfo"
          tags:
          - name: "name"
            tagType: {}
            id: 4
          - name: "name"
            tagType: {}
            id: 4
        - duration: "P1DT12H"
          creator: "creator"
          sourceType: {}
          tagIds:
          - 7
          - 7
          name: "name"
          id: 2
          url: "url"
          extraInfo: "extraInfo"
          tags:
          - name: "name"
            tagType: {}
            id: 4
          - name: "name"
            tagType: {}
            id: 4
        hrZones:
        - duration: "P1DT12H"
          zoneType: {}
          upperLimit: 7
          id: 1
          lowerLimit: 6
          percentSpentAbove: 1.1730742
        - duration: "P1DT12H"
          zoneType: {}
          upperLimit: 7
          id: 1
          lowerLimit: 6
          percentSpentAbove: 1.1730742
        tagIds:
        - 1
        - 1
        equipment:
        - quantity: 9
          magnitude: "5lbs"
          id: 7
          equipmentType: {}
        - quantity: 9
          magnitude: "5lbs"
          id: 7
          equipmentType: {}
        calories: 1
        minHR: 5
        samples:
        - 6
        - 6
        tags:
        - name: "name"
          tagType: {}
          id: 4
        - name: "name"
          tagType: {}
          id: 4
        avgHR: 5
        equipmentIds:
        - 3
        - 3
        startTime: "2022-12-10T00:14:25-00:00"
        id: 0
        endTime: "2022-12-10T00:14:25-00:00"
        sport: "sport"
        sourceIds:
        - 1
        - 1
      equipment:
      - quantity: 9
        magnitude: "5lbs"
        id: 7
        equipmentType: {}
      - quantity: 9
        magnitude: "5lbs"
        id: 7
        equipmentType: {}
      tags:
      - name: "name"
        tagType: {}
        id: 4
      - name: "name"
        tagType: {}
        id: 4
  Tag:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      tagType:
        $ref: "#/definitions/TagType"
    example:
      name: "name"
      tagType: {}
      id: 4
  Equipment:
    type: "object"
    required:
    - "equipmentType"
    properties:
      id:
        type: "integer"
        format: "int64"
      equipmentType:
        $ref: "#/definitions/EquipmentType"
      magnitude:
        type: "string"
        example: "5lbs"
        description: "The weight or strength of the equipment"
      quantity:
        type: "integer"
        description: "Only relvant for weights, e.g. used 1 or 2 dumbbells"
    example:
      quantity: 9
      magnitude: "5lbs"
      id: 7
      equipmentType: {}
  Source:
    type: "object"
    required:
    - "id"
    - "url"
    properties:
      id:
        type: "integer"
        format: "int64"
      url:
        type: "string"
        description: "The descriptive and unique identifier for the source - may not\
          \ actually be a web address"
      name:
        type: "string"
      creator:
        type: "string"
      duration:
        type: "string"
        example: "P1DT12H"
        description: "Duration in ISO 8601 format"
      sourceType:
        $ref: "#/definitions/SourceType"
      extraInfo:
        type: "string"
        description: "Field that could be used to add sourceType specific info"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
      tagIds:
        type: "array"
        items:
          type: "integer"
    example:
      duration: "P1DT12H"
      creator: "creator"
      sourceType: {}
      tagIds:
      - 7
      - 7
      name: "name"
      id: 2
      url: "url"
      extraInfo: "extraInfo"
      tags:
      - name: "name"
        tagType: {}
        id: 4
      - name: "name"
        tagType: {}
        id: 4
  HRZone:
    type: "object"
    required:
    - "id"
    - "zoneType"
    properties:
      id:
        type: "integer"
        format: "int64"
      zoneType:
        $ref: "#/definitions/ZoneType"
      lowerLimit:
        type: "integer"
      upperLimit:
        type: "integer"
      duration:
        type: "string"
        example: "P1DT12H"
        description: "Duration in ISO 8601 format"
      percentSpentAbove:
        type: "number"
        format: "float"
        description: "Convenience value to describe the total percentage of the workout\
          \ spent in this zone or higher"
    example:
      duration: "P1DT12H"
      zoneType: {}
      upperLimit: 7
      id: 1
      lowerLimit: 6
      percentSpentAbove: 1.1730742
  Workout:
    type: "object"
    required:
    - "id"
    - "startTime"
    properties:
      id:
        type: "integer"
        format: "int64"
      startTime:
        type: "string"
        format: "date-time"
        example: "2022-12-10T00:14:25-00:00"
      endTime:
        type: "string"
        format: "date-time"
        example: "2022-12-10T00:14:25-00:00"
      samples:
        type: "array"
        items:
          type: "integer"
      sport:
        type: "string"
      calories:
        type: "integer"
      avgHR:
        type: "integer"
      minHR:
        type: "integer"
      maxHR:
        type: "integer"
      notes:
        type: "string"
      equipment:
        type: "array"
        items:
          $ref: "#/definitions/Equipment"
      equipmentIds:
        type: "array"
        items:
          type: "integer"
      sources:
        type: "array"
        items:
          $ref: "#/definitions/Source"
      sourceIds:
        type: "array"
        items:
          type: "integer"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
      tagIds:
        type: "array"
        items:
          type: "integer"
      hrZones:
        type: "array"
        items:
          $ref: "#/definitions/HRZone"
    example:
      maxHR: 2
      notes: "notes"
      sources:
      - duration: "P1DT12H"
        creator: "creator"
        sourceType: {}
        tagIds:
        - 7
        - 7
        name: "name"
        id: 2
        url: "url"
        extraInfo: "extraInfo"
        tags:
        - name: "name"
          tagType: {}
          id: 4
        - name: "name"
          tagType: {}
          id: 4
      - duration: "P1DT12H"
        creator: "creator"
        sourceType: {}
        tagIds:
        - 7
        - 7
        name: "name"
        id: 2
        url: "url"
        extraInfo: "extraInfo"
        tags:
        - name: "name"
          tagType: {}
          id: 4
        - name: "name"
          tagType: {}
          id: 4
      hrZones:
      - duration: "P1DT12H"
        zoneType: {}
        upperLimit: 7
        id: 1
        lowerLimit: 6
        percentSpentAbove: 1.1730742
      - duration: "P1DT12H"
        zoneType: {}
        upperLimit: 7
        id: 1
        lowerLimit: 6
        percentSpentAbove: 1.1730742
      tagIds:
      - 1
      - 1
      equipment:
      - quantity: 9
        magnitude: "5lbs"
        id: 7
        equipmentType: {}
      - quantity: 9
        magnitude: "5lbs"
        id: 7
        equipmentType: {}
      calories: 1
      minHR: 5
      samples:
      - 6
      - 6
      tags:
      - name: "name"
        tagType: {}
        id: 4
      - name: "name"
        tagType: {}
        id: 4
      avgHR: 5
      equipmentIds:
      - 3
      - 3
      startTime: "2022-12-10T00:14:25-00:00"
      id: 0
      endTime: "2022-12-10T00:14:25-00:00"
      sport: "sport"
      sourceIds:
      - 1
      - 1
  SourceQuery:
    type: "object"
    properties:
      query:
        $ref: "#/definitions/Query"
    description: "Convenience wrapper around Query to specifically return Source objects"
  WorkoutQuery:
    type: "object"
    properties:
      query:
        $ref: "#/definitions/Query"
    description: "Convenience wrapper around Query to specifically return Workout\
      \ objects"
  Query:
    type: "object"
    properties:
      sourceAttributes:
        $ref: "#/definitions/SourceQueryParams"
      workoutAttributes:
        $ref: "#/definitions/WorkoutQueryParams"
      tags:
        type: "array"
        items:
          type: "string"
      tagTypes:
        type: "array"
        items:
          $ref: "#/definitions/TagType"
      paginate:
        type: "boolean"
    description: "Allow searching for resources using a wide range of parameters"
  SourceQueryParams:
    type: "object"
    properties:
      creator:
        type: "array"
        description: "Filter by source creator"
        items:
          type: "string"
      exercises:
        type: "array"
        description: "Return workouts which used a source containing this exercise"
        items:
          type: "string"
      tags:
        type: "array"
        description: "Tags to filter by"
        items:
          type: "string"
      tagTypes:
        type: "array"
        description: "Filter by specific type of tag"
        items:
          type: "string"
      lengthMin:
        type: "integer"
        description: "Minimum length of a source"
      lengthMax:
        type: "integer"
        description: "Maximum length of a source"
      sourceType:
        type: "array"
        items:
          $ref: "#/definitions/SourceType"
  WorkoutQueryParams:
    type: "object"
    properties:
      tags:
        type: "array"
        description: "Tags to filter by"
        items:
          type: "string"
      tagTypes:
        type: "array"
        description: "Filter by specific type of tag"
        items:
          type: "string"
      dateRange:
        $ref: "#/definitions/DateRange"
      sport:
        type: "array"
        description: "Filter by sport type"
        items:
          type: "string"
      samples:
        type: "boolean"
        description: "Whether to include samples in return"
      equipment:
        type: "array"
        description: "Filter by equipment used in the workout. \nIt is possible to\
          \ leave off magnitude or quantity, but equipmentType must always be specified\n"
        items:
          $ref: "#/definitions/Equipment"
      hrRange:
        $ref: "#/definitions/HRRange"
      avgHRRange:
        $ref: "#/definitions/HRRange"
      inHRZone:
        type: "array"
        description: "Time spent within a specific heart rate zone"
        items:
          $ref: "#/definitions/HRZoneRange"
      aboveHRZone:
        type: "array"
        description: "Time spent within and above a specific heart rate zone"
        items:
          $ref: "#/definitions/HRZoneRange"
      sourceParams:
        $ref: "#/definitions/SourceQueryParams"
  DateRange:
    type: "object"
    properties:
      start:
        type: "string"
        format: "date-time"
      end:
        type: "string"
        format: "date-time"
    description: "Get workouts within a range. Either start or end can be omitted."
  HRRange:
    type: "object"
    properties:
      min:
        type: "integer"
      max:
        type: "integer"
    description: "Range for heart rate values. Either min or max can be omitted."
  HRZoneRange:
    type: "object"
    properties:
      zoneType:
        $ref: "#/definitions/ZoneType"
      minTime:
        type: "string"
        example: "P1DT12H"
        description: "Duration in ISO 8601 format"
      maxTime:
        type: "string"
        example: "P1DT12H"
        description: "Duration in ISO 8601 format"
    description: "Time range spent in this HR zone. Either min or max can be omitted."
  ZoneType:
    type: "string"
    description: "The range (percentile relative to max HR) this zone covers"
    enum:
    - "below_50"
    - "fifty_to_60"
    - "sixty_to_70"
    - "seventy_to_80"
    - "eighty_to_90"
    - "ninety_to_100"
  TagType:
    type: "string"
    description: "Additional metadata on the source of the tag"
    enum:
    - "creator"
    - "tag"
    - "exercise"
    - "equipment"
    - "sport"
  EquipmentType:
    type: "string"
    enum:
    - "weight"
    - "band"
  SourceType:
    type: "string"
    enum:
    - "youtube"
    - "unknown"
